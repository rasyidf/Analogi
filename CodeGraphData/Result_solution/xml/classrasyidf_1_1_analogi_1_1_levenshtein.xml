<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classrasyidf_1_1_analogi_1_1_levenshtein" kind="class" prot="public">
    <compoundname>rasyidf::Analogi::Levenshtein</compoundname>
    <basecompoundref refid="interfacerasyidf_1_1_analogi_1_1_interfaces_1_1_i_metric_string_distance" prot="public" virt="non-virtual">rasyidf.Analogi.Interfaces.IMetricStringDistance</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrasyidf_1_1_analogi_1_1_levenshtein_1a963fa198f943a8caaea0a4d630d0d14e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double rasyidf.Analogi.Levenshtein.Distance</definition>
        <argsstring>(string s1, string s2)</argsstring>
        <name>Distance</name>
        <reimplements refid="interfacerasyidf_1_1_analogi_1_1_interfaces_1_1_i_metric_string_distance_1a681ede8e4a5e25c85fa3bf55cd92674d">Distance</reimplements>
        <param>
          <type>string</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>string</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Equivalent to Distance(s1, s2, Int32.MaxValue). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first string to compare.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second string to compare.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classrasyidf_1_1_analogi_1_1_levenshtein" kindref="compound">Levenshtein</ref> distance between strings</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/algi/Analogi/Analogi.Core/Levenshtein.cs" line="24" column="1" bodyfile="D:/repo/algi/Analogi/Analogi.Core/Levenshtein.cs" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classrasyidf_1_1_analogi_1_1_levenshtein_1a23720413e150c8dd49d2244e67bb01cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double rasyidf.Analogi.Levenshtein.Distance</definition>
        <argsstring>(string s1, string s2, int limit)</argsstring>
        <name>Distance</name>
        <param>
          <type>string</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>string</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classrasyidf_1_1_analogi_1_1_levenshtein" kindref="compound">Levenshtein</ref> distance, or edit distance, between two words is the Minimum number of single-character edits (insertions, deletions or substitutions) required to change one word into the other. </para>        </briefdescription>
        <detaileddescription>
<para><ulink url="http://en.wikipedia.org/wiki/Levenshtein_distance">http://en.wikipedia.org/wiki/Levenshtein_distance</ulink></para><para>It is always at least the difference of the sizes of the two strings. It is at most the length of the longer string. It is zero if and only if the strings are equal. If the strings are the same size, the HamMing distance is an upper bound on the <ref refid="classrasyidf_1_1_analogi_1_1_levenshtein" kindref="compound">Levenshtein</ref> distance. The <ref refid="classrasyidf_1_1_analogi_1_1_levenshtein" kindref="compound">Levenshtein</ref> distance verifies the triangle inequality (the distance between two strings is no greater than the sum <ref refid="classrasyidf_1_1_analogi_1_1_levenshtein" kindref="compound">Levenshtein</ref> distances from a third string).</para><para>Implementation uses dynamic programMing (Wagnerâ€“Fischer algorithm), with only 2 rows of data. The space requirement is thus O(m) and the algorithm runs in O(mn). </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first string to compare.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second string to compare.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum result to compute before stopping. This means that the calculation can terminate early if you only care about strings with a certain similarity. Set this to Int32.MaxValue if you want to run the calculation to completion in every case.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="classrasyidf_1_1_analogi_1_1_levenshtein" kindref="compound">Levenshtein</ref> distance between strings</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>If s1 or s2 is null.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/repo/algi/Analogi/Analogi.Core/Levenshtein.cs" line="58" column="1" bodyfile="D:/repo/algi/Analogi/Analogi.Core/Levenshtein.cs" bodystart="58" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classrasyidf_1_1_analogi_1_1_levenshtein" kindref="compound">Levenshtein</ref> distance between two words is the Minimum number of single-character edits (insertions, deletions or substitutions) required to change one string into the other. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="112">
        <label>rasyidf.Analogi.Levenshtein</label>
        <link refid="classrasyidf_1_1_analogi_1_1_levenshtein"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="114">
        <label>IStringDistance</label>
        <link refid="interfacerasyidf_1_1_analogi_1_1_interfaces_1_1_i_string_distance"/>
      </node>
      <node id="113">
        <label>IMetricStringDistance</label>
        <link refid="interfacerasyidf_1_1_analogi_1_1_interfaces_1_1_i_metric_string_distance"/>
        <childnode refid="114" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="115">
        <label>rasyidf.Analogi.Levenshtein</label>
        <link refid="classrasyidf_1_1_analogi_1_1_levenshtein"/>
        <childnode refid="116" relation="public-inheritance">
        </childnode>
      </node>
      <node id="117">
        <label>IStringDistance</label>
        <link refid="interfacerasyidf_1_1_analogi_1_1_interfaces_1_1_i_string_distance"/>
      </node>
      <node id="116">
        <label>IMetricStringDistance</label>
        <link refid="interfacerasyidf_1_1_analogi_1_1_interfaces_1_1_i_metric_string_distance"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/repo/algi/Analogi/Analogi.Core/Levenshtein.cs" line="17" column="1" bodyfile="D:/repo/algi/Analogi/Analogi.Core/Levenshtein.cs" bodystart="16" bodyend="140"/>
    <listofallmembers>
      <member refid="classrasyidf_1_1_analogi_1_1_levenshtein_1a963fa198f943a8caaea0a4d630d0d14e" prot="public" virt="non-virtual"><scope>rasyidf::Analogi::Levenshtein</scope><name>Distance</name></member>
      <member refid="classrasyidf_1_1_analogi_1_1_levenshtein_1a23720413e150c8dd49d2244e67bb01cf" prot="public" virt="non-virtual"><scope>rasyidf::Analogi::Levenshtein</scope><name>Distance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
